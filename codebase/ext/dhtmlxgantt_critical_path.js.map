{"version":3,"sources":["webpack:///dhtmlxgantt_critical_path.js","webpack:///webpack/bootstrap 39c67343b4e330efcd62","webpack:///./sources/core/links_common.js","webpack:///./sources/ext/critical_path.js"],"names":["Gantt","plugin","gantt","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_get_linked_task","link","getTarget","task","taskId","target","source","isTaskExists","getTask","role","assert","id","_get_link_target","_get_link_source","_formatLink","relations","this","isChildOf","isSummaryTask","from","_getImplicitLinks","respectTargetOffset","config","auto_scheduling_move_projects","targetDates","getSubtaskDates","start_date","end_date","to","$target","length","getState","drag_id","calculateDuration","fromTask","j","toTask","lag","subtaskLink","type","push","_convertToFinishToStartLink","_isAutoSchedulable","auto_scheduling","parent","selectOffset","eachTask","_getDirectDependencies","selectSuccessors","links","successors","linksIds","$source","getLink","concat","_getInheritedDependencies","stop","inheritedRelations","eachParent","apply","_getDirectSuccessors","_getInheritedSuccessors","_getDirectPredecessors","_getInheritedPredecessors","_getSuccessors","_getPredecessors","sourceTask","targetTask","res","finish_to_start","preferredStart","additionalLag","start_to_start","duration","finish_to_finish","start_to_finish","highlight_critical_path","_criticalPathHandler","render","attachEvent","_isCriticalTask","chain","path","_isProjectEnd","_getDependencies","next","_getSlack","isCriticalTask","undefined","isCriticalLink","getSlack","task1","task2","common","slacks","Math","min","next_task","relation","types","getTaskType","milestone","_getProjectEnd","tasks","getTaskByTime","sort","a","b","_hasDuration","_getSummaryPredecessors","predecessors"],"mappings":"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","file":"dhtmlxgantt_critical_path.js","sourcesContent":["/*!\n * @license\r\n * \r\n * dhtmlxGantt v.5.1.0 Professional\r\n * This software is covered by DHTMLX Enterprise License. Usage without proper license is prohibited.\r\n * \r\n * (c) Dinamenta, UAB.\r\n * \n */\nGantt.plugin(function(gantt){\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(gantt) {\r\n// helpers for building chain of dependencies, used for critical path calculation and for auto scheduling\r\n\r\n\tgantt._get_linked_task = function (link, getTarget) {\r\n\t\tvar task = null;\r\n\t\tvar taskId = getTarget ? link.target : link.source;\r\n\r\n\t\tif (gantt.isTaskExists(taskId)) {\r\n\t\t\ttask = gantt.getTask(taskId);\r\n\t\t}\r\n\t\tvar role = getTarget ? \"target\" : \"source\";\r\n\t\tgantt.assert(task, \"Link \" + role + \" not found. Task id=\" + taskId + \", link id=\" + link.id);\r\n\t\treturn task;\r\n\t};\r\n\tgantt._get_link_target = function (link) {\r\n\t\treturn gantt._get_linked_task(link, true);\r\n\t};\r\n\r\n\tgantt._get_link_source = function (link) {\r\n\t\treturn gantt._get_linked_task(link, false);\r\n\t};\r\n\r\n\r\n\tgantt._formatLink = function (link) {\r\n\t\tvar relations = [];\r\n\t\tvar target = this._get_link_target(link);\r\n\t\tvar source = this._get_link_source(link);\r\n\r\n\t\tif (!(source && target)) {\r\n\t\t\treturn relations;\r\n\t\t}\r\n\r\n\t\tif ((gantt.isChildOf(source.id, target.id) && gantt.isSummaryTask(target)) || (gantt.isChildOf(target.id, source.id) && gantt.isSummaryTask(source))) {\r\n\t\t\treturn relations;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// there are three kinds of connections at this point\r\n\t\t// task -> task - regular link\r\n\t\t// task -> project - transform it into set of regular links (task -> [each subtask]), use offset beetween subtask and project dates as lag, in order not to change mutual positions of subtasks inside a project\r\n\t\t// project -> task - transform it into ([each subtask] -> task) links\r\n\t\t// project -> project - transform it into ([each subtask of p1] -> [each subtask of p2]) links\r\n\r\n\t\tvar from = this._getImplicitLinks(link, source, function (c) {\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\tvar respectTargetOffset = gantt.config.auto_scheduling_move_projects;\r\n\t\tvar targetDates = this.isSummaryTask(target) ? this.getSubtaskDates(target.id) : {\r\n\t\t\tstart_date: target.start_date,\r\n\t\t\tend_date: target.end_date\r\n\t\t};\r\n\t\tvar to = this._getImplicitLinks(link, target, function (c) {\r\n\t\t\tif (!respectTargetOffset) {\r\n\t\t\t\treturn 0;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (!c.$target.length && !(gantt.getState().drag_id == c.id)) {// drag_id - virtual lag shouldn't restrict task that is being moved inside project\r\n\t\t\t\t\treturn gantt.calculateDuration({\r\n\t\t\t\t\t\tstart_date: targetDates.start_date,\r\n\t\t\t\t\t\tend_date: c.start_date,\r\n\t\t\t\t\t\ttask: source\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfor (var i = 0; i < from.length; i++) {\r\n\t\t\tvar fromTask = from[i];\r\n\t\t\tfor (var j = 0; j < to.length; j++) {\r\n\t\t\t\tvar toTask = to[j];\r\n\r\n\t\t\t\tvar lag = fromTask.lag * 1 + toTask.lag * 1;\r\n\r\n\t\t\t\tvar subtaskLink = {\r\n\t\t\t\t\tid: link.id,\r\n\t\t\t\t\ttype: link.type,\r\n\t\t\t\t\tsource: fromTask.task,\r\n\t\t\t\t\ttarget: toTask.task,\r\n\t\t\t\t\tlag: (link.lag * 1 || 0) + lag\r\n\t\t\t\t};\r\n\r\n\t\t\t\trelations.push(gantt._convertToFinishToStartLink(toTask.task, subtaskLink, source, target));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn relations;\r\n\t};\r\n\r\ngantt._isAutoSchedulable = function(task){\r\n\treturn task.auto_scheduling !== false;\r\n};\r\n\r\ngantt._getImplicitLinks = function(link, parent, selectOffset){\r\n\tvar relations = [];\r\n\tif(this.isSummaryTask(parent)){\r\n\t\tthis.eachTask(function(c){\r\n\t\t\tif(!this.isSummaryTask(c))\r\n\t\t\t\trelations.push({task: c.id, lag: selectOffset(c)});\r\n\t\t}, parent.id);\r\n\t}else{\r\n\t\trelations.push({task:parent.id, lag: 0});\r\n\t}\r\n\r\n\t\treturn relations;\r\n\t};\r\n\r\n\tgantt._getDirectDependencies = function (task, selectSuccessors) {\r\n\r\n\t\tvar links = [],\r\n\t\t\tsuccessors = [];\r\n\r\n\t\tvar linksIds = selectSuccessors ? task.$source : task.$target;\r\n\r\n\tfor(var i = 0; i < linksIds.length; i++){\r\n\t\tvar link = this.getLink(linksIds[i]);\r\n\t\tif(this.isTaskExists(link.source) && this.isTaskExists(link.target)) {\r\n\t\t\tvar target = this.getTask(link.target);\r\n\t\t\tif(this._isAutoSchedulable(target)){\r\n\t\t\t\tlinks.push(this.getLink(linksIds[i]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t\tfor (var i = 0; i < links.length; i++) {\r\n\t\t\tsuccessors = successors.concat(this._formatLink(links[i]));\r\n\t\t}\r\n\r\n\t\treturn successors;\r\n\t};\r\n\r\n\tgantt._getInheritedDependencies = function (task, selectSuccessors) {\r\n\t\tvar successors = [];\r\n\tvar stop = false;\r\n\tvar inheritedRelations = [];\r\n\tif(this.isTaskExists(task.id)){\r\n\t\tthis.eachParent(function(parent){\r\n\t\t\tif(stop)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(this.isSummaryTask(parent)){\r\n\t\t\t\tif(!this._isAutoSchedulable(parent)){\r\n\t\t\t\t\tstop = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tinheritedRelations.push.apply(inheritedRelations, this._getDirectDependencies(parent, selectSuccessors));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, task.id, this);\r\n\r\n\t\t\tfor (var i = 0; i < inheritedRelations.length; i++) {\r\n\r\n\t\t\t\tvar relProperty = selectSuccessors ? inheritedRelations[i].source : inheritedRelations[i].target;\r\n\r\n\t\t\t\tif (relProperty == task.id) {\r\n\t\t\t\t\tsuccessors.push(inheritedRelations[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn successors;\r\n\t};\r\n\r\n\r\n\tgantt._getDirectSuccessors = function (task) {\r\n\t\treturn this._getDirectDependencies(task, true);\r\n\t};\r\n\r\n\tgantt._getInheritedSuccessors = function (task) {\r\n\t\treturn this._getInheritedDependencies(task, true);\r\n\t};\r\n\r\n\tgantt._getDirectPredecessors = function (task) {\r\n\t\treturn this._getDirectDependencies(task, false);\r\n\t};\r\n\r\n\tgantt._getInheritedPredecessors = function (task) {\r\n\t\treturn this._getInheritedDependencies(task, false);\r\n\t};\r\n\r\n\r\n\tgantt._getSuccessors = function (task) {\r\n\t\treturn this._getDirectSuccessors(task).concat(this._getInheritedSuccessors(task));\r\n\t};\r\n\r\n\tgantt._getPredecessors = function (task) {\r\n\t\treturn this._getDirectPredecessors(task).concat(this._getInheritedPredecessors(task));\r\n\t};\r\n\r\n\r\n\tgantt._convertToFinishToStartLink = function (id, link, sourceTask, targetTask) {\r\n\t\t// convert finish-to-finish, start-to-finish and start-to-start to finish-to-start link and provide some additional properties\r\n\t\tvar res = {\r\n\t\t\ttarget: id,\r\n\t\t\tlink: gantt.config.links.finish_to_start,\r\n\t\t\tid: link.id,\r\n\t\t\tlag: link.lag || 0,\r\n\t\t\tsource: link.source,\r\n\t\t\tpreferredStart: null\r\n\t\t};\r\n\r\n\t\tvar additionalLag = 0;\r\n\t\tswitch (link.type) {\r\n\t\t\tcase gantt.config.links.start_to_start:\r\n\t\t\t\tadditionalLag = -sourceTask.duration;\r\n\t\t\t\tbreak;\r\n\t\t\tcase gantt.config.links.finish_to_finish:\r\n\t\t\t\tadditionalLag = -targetTask.duration;\r\n\t\t\t\tbreak;\r\n\t\t\tcase gantt.config.links.start_to_finish:\r\n\t\t\t\tadditionalLag = -sourceTask.duration - targetTask.duration;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tadditionalLag = 0;\r\n\t\t}\r\n\r\n\t\tres.lag += additionalLag;\r\n\t\treturn res;\r\n\t};\r\n};\n\n/***/ }),\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(6);\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(0)(gantt);\r\n\r\ngantt.config.highlight_critical_path = false;\r\ngantt._criticalPathHandler = function(){\r\n\tif(gantt.config.highlight_critical_path)\r\n\t\tgantt.render();\r\n};\r\ngantt.attachEvent(\"onAfterLinkAdd\", gantt._criticalPathHandler);\r\ngantt.attachEvent(\"onAfterLinkUpdate\", gantt._criticalPathHandler);\r\ngantt.attachEvent(\"onAfterLinkDelete\", gantt._criticalPathHandler);\r\ngantt.attachEvent(\"onAfterTaskAdd\", gantt._criticalPathHandler);\r\ngantt.attachEvent(\"onAfterTaskUpdate\", gantt._criticalPathHandler);\r\ngantt.attachEvent(\"onAfterTaskDelete\", gantt._criticalPathHandler);\r\n\r\n\r\ngantt._isCriticalTask = function(task, chain){\r\n\tif(!task || !task.id) return;\r\n\tvar path = chain || {};\r\n\r\n\tif(this._isProjectEnd(task)){\r\n\t\treturn true;\r\n\t}else{\r\n\t\tpath[task.id] = true;\r\n\t\tvar successors = this._getDependencies(task);\r\n\t\tfor(var i=0; i < successors.length; i++){\r\n\t\t\tvar next = this.getTask(successors[i].target);\r\n\t\t\tif(this._getSlack(task, next, successors[i]) <= 0 && (!path[next.id] && this._isCriticalTask(next, path)))\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\ngantt.isCriticalTask = function (task) {\r\n\tgantt.assert(!!(task && task.id !== undefined), \"Invalid argument for gantt.isCriticalTask\");\r\n\treturn this._isCriticalTask(task, {});\r\n};\r\n\r\ngantt.isCriticalLink = function (link) {\r\n\treturn this.isCriticalTask(gantt.getTask(link.source));\r\n};\r\n\r\ngantt.getSlack = function(task1, task2){\r\n\tvar relations = [];\r\n\tvar common = {};\r\n\tfor(var i=0; i < task1.$source.length; i++){\r\n\t\tcommon[task1.$source[i]] = true;\r\n\t}\r\n\tfor(var i=0; i < task2.$target.length; i++){\r\n\t\tif(common[task2.$target[i]])\r\n\t\t\trelations.push(task2.$target[i]);\r\n\t}\r\n\r\n\tvar slacks = [];\r\n\tfor(var i=0; i < relations.length; i++){\r\n\t\tvar link = this.getLink(relations[i]);\r\n\t\tslacks.push(this._getSlack(task1, task2, this._convertToFinishToStartLink(link.id, link, task1, task2)));\r\n\t}\r\n\r\n\treturn Math.min.apply(Math, slacks);\r\n};\r\n\r\ngantt._getSlack = function (task, next_task, relation) {\r\n\t// relation - link expressed as finish-to-start (gantt._convertToFinishToStartLink)\r\n\tvar types = this.config.types;\r\n\r\n\tvar from = null;\r\n\tif(this.getTaskType(task.type) == types.milestone){\r\n\t\tfrom = task.start_date;\r\n\t}else{\r\n\t\tfrom = task.end_date;\r\n\t}\r\n\r\n\tvar to = next_task.start_date;\r\n\r\n\tvar duration = 0;\r\n\tif(+from > +to){\r\n\t\tduration = -this.calculateDuration({start_date: to, end_date: from, task: task});\r\n\t}else{\r\n\t\tduration = this.calculateDuration({start_date: from, end_date: to, task: task});\r\n\t}\r\n\r\n\tvar lag = relation.lag;\r\n\tif(lag && lag*1 == lag){\r\n\t\tduration -= lag;\r\n\t}\r\n\r\n\treturn duration;\r\n};\r\n\r\ngantt._getProjectEnd = function () {\r\n\tvar tasks = gantt.getTaskByTime();\r\n\ttasks = tasks.sort(function (a, b) { return +a.end_date > +b.end_date ? 1 : -1; });\r\n\treturn tasks.length ? tasks[tasks.length - 1].end_date : null;\r\n};\r\n\r\ngantt._isProjectEnd = function (task) {\r\n\treturn !(this._hasDuration({start_date:task.end_date, end_date: this._getProjectEnd(), task:task}));\r\n};\r\n\r\ngantt._getSummaryPredecessors = function(task){\r\n\tvar predecessors = [];\r\n\r\n\t// all constraints that are applied to summary parents must be applied to the task\r\n\tthis.eachParent(function(parent){\r\n\t\tif(this.isSummaryTask(parent))\r\n\t\t\tpredecessors = predecessors.concat(gantt._getDependencies(parent));\r\n\t}, task);\r\n\r\n\treturn predecessors;\r\n};\r\n\r\n\r\ngantt._getDependencies = function(task){\r\n\tvar successors = this._getSuccessors(task).concat(\r\n\t\tthis._getSummaryPredecessors(task)\r\n\t);\r\n\treturn successors;\r\n};\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// dhtmlxgantt_critical_path.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 39c67343b4e330efcd62","module.exports = function(gantt) {\r\n// helpers for building chain of dependencies, used for critical path calculation and for auto scheduling\r\n\r\n\tgantt._get_linked_task = function (link, getTarget) {\r\n\t\tvar task = null;\r\n\t\tvar taskId = getTarget ? link.target : link.source;\r\n\r\n\t\tif (gantt.isTaskExists(taskId)) {\r\n\t\t\ttask = gantt.getTask(taskId);\r\n\t\t}\r\n\t\tvar role = getTarget ? \"target\" : \"source\";\r\n\t\tgantt.assert(task, \"Link \" + role + \" not found. Task id=\" + taskId + \", link id=\" + link.id);\r\n\t\treturn task;\r\n\t};\r\n\tgantt._get_link_target = function (link) {\r\n\t\treturn gantt._get_linked_task(link, true);\r\n\t};\r\n\r\n\tgantt._get_link_source = function (link) {\r\n\t\treturn gantt._get_linked_task(link, false);\r\n\t};\r\n\r\n\r\n\tgantt._formatLink = function (link) {\r\n\t\tvar relations = [];\r\n\t\tvar target = this._get_link_target(link);\r\n\t\tvar source = this._get_link_source(link);\r\n\r\n\t\tif (!(source && target)) {\r\n\t\t\treturn relations;\r\n\t\t}\r\n\r\n\t\tif ((gantt.isChildOf(source.id, target.id) && gantt.isSummaryTask(target)) || (gantt.isChildOf(target.id, source.id) && gantt.isSummaryTask(source))) {\r\n\t\t\treturn relations;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// there are three kinds of connections at this point\r\n\t\t// task -> task - regular link\r\n\t\t// task -> project - transform it into set of regular links (task -> [each subtask]), use offset beetween subtask and project dates as lag, in order not to change mutual positions of subtasks inside a project\r\n\t\t// project -> task - transform it into ([each subtask] -> task) links\r\n\t\t// project -> project - transform it into ([each subtask of p1] -> [each subtask of p2]) links\r\n\r\n\t\tvar from = this._getImplicitLinks(link, source, function (c) {\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\tvar respectTargetOffset = gantt.config.auto_scheduling_move_projects;\r\n\t\tvar targetDates = this.isSummaryTask(target) ? this.getSubtaskDates(target.id) : {\r\n\t\t\tstart_date: target.start_date,\r\n\t\t\tend_date: target.end_date\r\n\t\t};\r\n\t\tvar to = this._getImplicitLinks(link, target, function (c) {\r\n\t\t\tif (!respectTargetOffset) {\r\n\t\t\t\treturn 0;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (!c.$target.length && !(gantt.getState().drag_id == c.id)) {// drag_id - virtual lag shouldn't restrict task that is being moved inside project\r\n\t\t\t\t\treturn gantt.calculateDuration({\r\n\t\t\t\t\t\tstart_date: targetDates.start_date,\r\n\t\t\t\t\t\tend_date: c.start_date,\r\n\t\t\t\t\t\ttask: source\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfor (var i = 0; i < from.length; i++) {\r\n\t\t\tvar fromTask = from[i];\r\n\t\t\tfor (var j = 0; j < to.length; j++) {\r\n\t\t\t\tvar toTask = to[j];\r\n\r\n\t\t\t\tvar lag = fromTask.lag * 1 + toTask.lag * 1;\r\n\r\n\t\t\t\tvar subtaskLink = {\r\n\t\t\t\t\tid: link.id,\r\n\t\t\t\t\ttype: link.type,\r\n\t\t\t\t\tsource: fromTask.task,\r\n\t\t\t\t\ttarget: toTask.task,\r\n\t\t\t\t\tlag: (link.lag * 1 || 0) + lag\r\n\t\t\t\t};\r\n\r\n\t\t\t\trelations.push(gantt._convertToFinishToStartLink(toTask.task, subtaskLink, source, target));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn relations;\r\n\t};\r\n\r\ngantt._isAutoSchedulable = function(task){\r\n\treturn task.auto_scheduling !== false;\r\n};\r\n\r\ngantt._getImplicitLinks = function(link, parent, selectOffset){\r\n\tvar relations = [];\r\n\tif(this.isSummaryTask(parent)){\r\n\t\tthis.eachTask(function(c){\r\n\t\t\tif(!this.isSummaryTask(c))\r\n\t\t\t\trelations.push({task: c.id, lag: selectOffset(c)});\r\n\t\t}, parent.id);\r\n\t}else{\r\n\t\trelations.push({task:parent.id, lag: 0});\r\n\t}\r\n\r\n\t\treturn relations;\r\n\t};\r\n\r\n\tgantt._getDirectDependencies = function (task, selectSuccessors) {\r\n\r\n\t\tvar links = [],\r\n\t\t\tsuccessors = [];\r\n\r\n\t\tvar linksIds = selectSuccessors ? task.$source : task.$target;\r\n\r\n\tfor(var i = 0; i < linksIds.length; i++){\r\n\t\tvar link = this.getLink(linksIds[i]);\r\n\t\tif(this.isTaskExists(link.source) && this.isTaskExists(link.target)) {\r\n\t\t\tvar target = this.getTask(link.target);\r\n\t\t\tif(this._isAutoSchedulable(target)){\r\n\t\t\t\tlinks.push(this.getLink(linksIds[i]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t\tfor (var i = 0; i < links.length; i++) {\r\n\t\t\tsuccessors = successors.concat(this._formatLink(links[i]));\r\n\t\t}\r\n\r\n\t\treturn successors;\r\n\t};\r\n\r\n\tgantt._getInheritedDependencies = function (task, selectSuccessors) {\r\n\t\tvar successors = [];\r\n\tvar stop = false;\r\n\tvar inheritedRelations = [];\r\n\tif(this.isTaskExists(task.id)){\r\n\t\tthis.eachParent(function(parent){\r\n\t\t\tif(stop)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(this.isSummaryTask(parent)){\r\n\t\t\t\tif(!this._isAutoSchedulable(parent)){\r\n\t\t\t\t\tstop = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tinheritedRelations.push.apply(inheritedRelations, this._getDirectDependencies(parent, selectSuccessors));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, task.id, this);\r\n\r\n\t\t\tfor (var i = 0; i < inheritedRelations.length; i++) {\r\n\r\n\t\t\t\tvar relProperty = selectSuccessors ? inheritedRelations[i].source : inheritedRelations[i].target;\r\n\r\n\t\t\t\tif (relProperty == task.id) {\r\n\t\t\t\t\tsuccessors.push(inheritedRelations[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn successors;\r\n\t};\r\n\r\n\r\n\tgantt._getDirectSuccessors = function (task) {\r\n\t\treturn this._getDirectDependencies(task, true);\r\n\t};\r\n\r\n\tgantt._getInheritedSuccessors = function (task) {\r\n\t\treturn this._getInheritedDependencies(task, true);\r\n\t};\r\n\r\n\tgantt._getDirectPredecessors = function (task) {\r\n\t\treturn this._getDirectDependencies(task, false);\r\n\t};\r\n\r\n\tgantt._getInheritedPredecessors = function (task) {\r\n\t\treturn this._getInheritedDependencies(task, false);\r\n\t};\r\n\r\n\r\n\tgantt._getSuccessors = function (task) {\r\n\t\treturn this._getDirectSuccessors(task).concat(this._getInheritedSuccessors(task));\r\n\t};\r\n\r\n\tgantt._getPredecessors = function (task) {\r\n\t\treturn this._getDirectPredecessors(task).concat(this._getInheritedPredecessors(task));\r\n\t};\r\n\r\n\r\n\tgantt._convertToFinishToStartLink = function (id, link, sourceTask, targetTask) {\r\n\t\t// convert finish-to-finish, start-to-finish and start-to-start to finish-to-start link and provide some additional properties\r\n\t\tvar res = {\r\n\t\t\ttarget: id,\r\n\t\t\tlink: gantt.config.links.finish_to_start,\r\n\t\t\tid: link.id,\r\n\t\t\tlag: link.lag || 0,\r\n\t\t\tsource: link.source,\r\n\t\t\tpreferredStart: null\r\n\t\t};\r\n\r\n\t\tvar additionalLag = 0;\r\n\t\tswitch (link.type) {\r\n\t\t\tcase gantt.config.links.start_to_start:\r\n\t\t\t\tadditionalLag = -sourceTask.duration;\r\n\t\t\t\tbreak;\r\n\t\t\tcase gantt.config.links.finish_to_finish:\r\n\t\t\t\tadditionalLag = -targetTask.duration;\r\n\t\t\t\tbreak;\r\n\t\t\tcase gantt.config.links.start_to_finish:\r\n\t\t\t\tadditionalLag = -sourceTask.duration - targetTask.duration;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tadditionalLag = 0;\r\n\t\t}\r\n\r\n\t\tres.lag += additionalLag;\r\n\t\treturn res;\r\n\t};\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sources/core/links_common.js\n// module id = 0\n// module chunks = 1 3","require(\"../core/links_common\")(gantt);\r\n\r\ngantt.config.highlight_critical_path = false;\r\ngantt._criticalPathHandler = function(){\r\n\tif(gantt.config.highlight_critical_path)\r\n\t\tgantt.render();\r\n};\r\ngantt.attachEvent(\"onAfterLinkAdd\", gantt._criticalPathHandler);\r\ngantt.attachEvent(\"onAfterLinkUpdate\", gantt._criticalPathHandler);\r\ngantt.attachEvent(\"onAfterLinkDelete\", gantt._criticalPathHandler);\r\ngantt.attachEvent(\"onAfterTaskAdd\", gantt._criticalPathHandler);\r\ngantt.attachEvent(\"onAfterTaskUpdate\", gantt._criticalPathHandler);\r\ngantt.attachEvent(\"onAfterTaskDelete\", gantt._criticalPathHandler);\r\n\r\n\r\ngantt._isCriticalTask = function(task, chain){\r\n\tif(!task || !task.id) return;\r\n\tvar path = chain || {};\r\n\r\n\tif(this._isProjectEnd(task)){\r\n\t\treturn true;\r\n\t}else{\r\n\t\tpath[task.id] = true;\r\n\t\tvar successors = this._getDependencies(task);\r\n\t\tfor(var i=0; i < successors.length; i++){\r\n\t\t\tvar next = this.getTask(successors[i].target);\r\n\t\t\tif(this._getSlack(task, next, successors[i]) <= 0 && (!path[next.id] && this._isCriticalTask(next, path)))\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\ngantt.isCriticalTask = function (task) {\r\n\tgantt.assert(!!(task && task.id !== undefined), \"Invalid argument for gantt.isCriticalTask\");\r\n\treturn this._isCriticalTask(task, {});\r\n};\r\n\r\ngantt.isCriticalLink = function (link) {\r\n\treturn this.isCriticalTask(gantt.getTask(link.source));\r\n};\r\n\r\ngantt.getSlack = function(task1, task2){\r\n\tvar relations = [];\r\n\tvar common = {};\r\n\tfor(var i=0; i < task1.$source.length; i++){\r\n\t\tcommon[task1.$source[i]] = true;\r\n\t}\r\n\tfor(var i=0; i < task2.$target.length; i++){\r\n\t\tif(common[task2.$target[i]])\r\n\t\t\trelations.push(task2.$target[i]);\r\n\t}\r\n\r\n\tvar slacks = [];\r\n\tfor(var i=0; i < relations.length; i++){\r\n\t\tvar link = this.getLink(relations[i]);\r\n\t\tslacks.push(this._getSlack(task1, task2, this._convertToFinishToStartLink(link.id, link, task1, task2)));\r\n\t}\r\n\r\n\treturn Math.min.apply(Math, slacks);\r\n};\r\n\r\ngantt._getSlack = function (task, next_task, relation) {\r\n\t// relation - link expressed as finish-to-start (gantt._convertToFinishToStartLink)\r\n\tvar types = this.config.types;\r\n\r\n\tvar from = null;\r\n\tif(this.getTaskType(task.type) == types.milestone){\r\n\t\tfrom = task.start_date;\r\n\t}else{\r\n\t\tfrom = task.end_date;\r\n\t}\r\n\r\n\tvar to = next_task.start_date;\r\n\r\n\tvar duration = 0;\r\n\tif(+from > +to){\r\n\t\tduration = -this.calculateDuration({start_date: to, end_date: from, task: task});\r\n\t}else{\r\n\t\tduration = this.calculateDuration({start_date: from, end_date: to, task: task});\r\n\t}\r\n\r\n\tvar lag = relation.lag;\r\n\tif(lag && lag*1 == lag){\r\n\t\tduration -= lag;\r\n\t}\r\n\r\n\treturn duration;\r\n};\r\n\r\ngantt._getProjectEnd = function () {\r\n\tvar tasks = gantt.getTaskByTime();\r\n\ttasks = tasks.sort(function (a, b) { return +a.end_date > +b.end_date ? 1 : -1; });\r\n\treturn tasks.length ? tasks[tasks.length - 1].end_date : null;\r\n};\r\n\r\ngantt._isProjectEnd = function (task) {\r\n\treturn !(this._hasDuration({start_date:task.end_date, end_date: this._getProjectEnd(), task:task}));\r\n};\r\n\r\ngantt._getSummaryPredecessors = function(task){\r\n\tvar predecessors = [];\r\n\r\n\t// all constraints that are applied to summary parents must be applied to the task\r\n\tthis.eachParent(function(parent){\r\n\t\tif(this.isSummaryTask(parent))\r\n\t\t\tpredecessors = predecessors.concat(gantt._getDependencies(parent));\r\n\t}, task);\r\n\r\n\treturn predecessors;\r\n};\r\n\r\n\r\ngantt._getDependencies = function(task){\r\n\tvar successors = this._getSuccessors(task).concat(\r\n\t\tthis._getSummaryPredecessors(task)\r\n\t);\r\n\treturn successors;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sources/ext/critical_path.js\n// module id = 6\n// module chunks = 3"],"sourceRoot":""}